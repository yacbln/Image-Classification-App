{"ast":null,"code":"var _jsxFileName = \"/Users/yb97/Desktop/imgclassify/Image-Classification-App/imgclassify-front/src/components/Classifier/Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner, Button, Alert, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Classifier extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      files: [],\n      isLoading: false,\n      recentImage: null\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        files: [],\n        isLoading: true,\n        recentImage: null\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        }, () => {\n          console.log(this.state.files[0].name);\n        });\n      }, 1000);\n    };\n\n    this.activateSpinner = () => {\n      this.setState({\n        files: [],\n        isLoading: true\n      });\n    };\n\n    this.deactivateSpinner = () => {\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.sendImage = () => {\n      this.activateSpinner();\n      let formData = new FormData();\n      formData.append('picture', this.state.files[0], this.state.files[0].name);\n      axios.post('http://127.0.0.1:8000/api/images/', formData, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(resp => {\n        this.getImageClass(resp);\n        console.log(resp.data.id);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getImageClass = obj => {\n      axios.get(`http://127.0.0.1:8000/api/images/${obj.data.id}/`, {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(resp => {\n        this.setState({\n          recentImage: resp\n        });\n        console.log(resp);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.deactivateSpinner();\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: this.onDrop,\n      accept: \"image/png, image/jpeg\",\n      children: _ref => {\n        let {\n          isDragActive,\n          getRootProps,\n          getInputProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: 'dropzone back'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-image mb-2 text-muted\",\n              style: {\n                fontSize: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: isDragActive ? \"Drop some images \" : \"Drag 'n' drop some files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), this.state.files.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            size: \"lg\",\n            className: \"mt-3\",\n            onClick: this.sendImage,\n            children: \"Select Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), this.state.recentImage && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"primary\",\n              children: this.state.recentImage.data.classified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              className: \"justify-content-center\",\n              src: this.state.recentImage.data.picture,\n              height: \"200\",\n              rounded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Classifier;","map":{"version":3,"sources":["/Users/yb97/Desktop/imgclassify/Image-Classification-App/imgclassify-front/src/components/Classifier/Classifier.js"],"names":["React","Component","Dropzone","Spinner","Button","Alert","Image","axios","Classifier","state","files","isLoading","recentImage","onDrop","setState","loadImage","setTimeout","console","log","name","activateSpinner","deactivateSpinner","sendImage","formData","FormData","append","post","headers","then","resp","getImageClass","data","id","catch","err","obj","get","render","map","file","size","isDragActive","getRootProps","getInputProps","className","fontSize","length","classified","picture"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css'\nimport {Spinner, Button, Alert, Image} from 'react-bootstrap'\nimport axios from 'axios'\n\nclass Classifier extends Component {\n    state = { \n        files: [],\n        isLoading: false,\n        recentImage: null,\n     }\n\n     onDrop =(files) =>{\n        this.setState({\n            files:[],\n            isLoading: true,\n            recentImage:null\n            })\n        this.loadImage(files)\n     }\n\n     loadImage=(files)=>{\n         setTimeout(() => {\n             this.setState({\n                 files,\n                 isLoading: false\n             }, () => {\n                console.log(this.state.files[0].name)\n             })\n         }, 1000);\n     }\n\n     activateSpinner = () => {\n         this.setState({\n             files:[],\n             isLoading:true,\n            })\n     }\n\n     deactivateSpinner=()=> {\n        this.setState({isLoading:false})\n     }\n\n     sendImage =()=> {\n         this.activateSpinner()\n         let formData = new FormData()\n         formData.append('picture', this.state.files[0], this.state.files[0].name)\n         axios.post('http://127.0.0.1:8000/api/images/', formData, {\n             headers: {\n                'accept': 'application/json',\n                'content-type': 'multipart/form-data'\n             }\n         })\n         .then(resp=>{\n             this.getImageClass(resp)\n             console.log(resp.data.id)\n         })\n         .catch(err=>{\n             console.log(err)\n         })\n     }\n\n     getImageClass =(obj)=> {\n         axios.get(`http://127.0.0.1:8000/api/images/${obj.data.id}/`, {\n             headers: {\n                'accept': 'application/json',\n             }\n         })\n         .then(resp=>{\n             this.setState({recentImage:resp})\n             console.log(resp)\n         })\n         .catch(err=>{\n            console.log(err)\n        })\n        this.deactivateSpinner()\n\n     }\n     \n    render() { \n        const files = this.state.files.map(file => (\n            <li key={file.name}>\n              {file.name} - {file.size} bytes\n            </li>\n          ));\n        return ( \n            <Dropzone onDrop={this.onDrop} accept='image/png, image/jpeg'>\n            {({isDragActive, getRootProps, getInputProps}) => (\n              <section className=\"container\">\n                <div {...getRootProps({className: 'dropzone back'})}>\n                  <input {...getInputProps()} />\n                  <i className=\"far fa-image mb-2 text-muted\" style={{fontSize:100}}></i>\n                  <p className='text-muted'>{isDragActive ? \"Drop some images \" : \"Drag 'n' drop some files here, or click to select files\"}</p>\n                </div>\n                <aside>\n                  {files}\n                </aside>\n\n                {this.state.files.length >0 &&\n                <Button variant='info' size='lg' className='mt-3' onClick={this.sendImage}>Select Image</Button>\n                }\n\n                {this.state.isLoading &&\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\n                }\n\n                {this.state.recentImage &&\n                <React.Fragment>\n                    <Alert variant='primary'>\n                        {this.state.recentImage.data.classified}\n                    </Alert>\n                    <Image className='justify-content-center' src={this.state.recentImage.data.picture} height='200' rounded/>\n                </React.Fragment>\n                }\n              </section>\n            )}\n          </Dropzone>\n         );\n    }\n}\n \nexport default Classifier;"]},"metadata":{},"sourceType":"module"}